# Generated by Django 2.1.3 on 2018-11-08 14:29

from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='RgtCheck',
            fields=[
                ('check_id', models.AutoField(primary_key=True, serialize=False)),
                ('check_uid', models.SmallIntegerField(unique=True)),
                ('check_desc', models.CharField(max_length=1024)),
                ('timestamp', models.DateTimeField()),
            ],
            options={
                'db_table': 'rgt_check',
                'ordering': ['check_uid'],
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='RgtEvent',
            fields=[
                ('event_id', models.AutoField(primary_key=True, serialize=False)),
                ('event_uid', models.SmallIntegerField(unique=True)),
                ('event_name', models.CharField(max_length=256)),
                ('timestamp', models.DateTimeField()),
            ],
            options={
                'db_table': 'rgt_event',
                'ordering': ['event_uid'],
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='RgtTest',
            fields=[
                ('test_id', models.AutoField(primary_key=True, serialize=False)),
                ('harness_uid', models.CharField(max_length=36, unique=True)),
                ('harness_start', models.DateTimeField()),
                ('harness_tld', models.CharField(max_length=1024)),
                ('application', models.CharField(max_length=1024)),
                ('testname', models.CharField(max_length=1024)),
                ('job_id', models.CharField(blank=True, max_length=64, null=True)),
                ('lsf_exit_status', models.SmallIntegerField(blank=True, null=True)),
                ('build_status', models.SmallIntegerField(blank=True, null=True)),
                ('submit_status', models.SmallIntegerField(blank=True, null=True)),
                ('output_build', models.TextField(blank=True, null=True)),
                ('output_submit', models.TextField(blank=True, null=True)),
                ('output_check', models.TextField(blank=True, null=True)),
                ('output_report', models.TextField(blank=True, null=True)),
                ('system', models.CharField(max_length=64)),
                ('previous_job_id', models.CharField(max_length=36)),
                ('done', models.BooleanField()),
                ('timestamp', models.DateTimeField()),
            ],
            options={
                'db_table': 'rgt_test',
                'ordering': ['application', 'testname', 'harness_uid'],
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='RgtTestEvent',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('event_time', models.DateTimeField()),
                ('timestamp', models.DateTimeField()),
            ],
            options={
                'db_table': 'rgt_test_event',
                'ordering': ['test_id', 'event_id'],
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TestRgtCheck',
            fields=[
                ('check_id', models.AutoField(primary_key=True, serialize=False)),
                ('check_uid', models.SmallIntegerField(unique=True)),
                ('check_desc', models.CharField(max_length=1024)),
                ('timestamp', models.DateTimeField()),
            ],
            options={
                'db_table': 'test_rgt_check',
                'ordering': ['check_uid'],
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TestRgtEvent',
            fields=[
                ('event_id', models.AutoField(primary_key=True, serialize=False)),
                ('event_uid', models.SmallIntegerField(unique=True)),
                ('event_name', models.CharField(max_length=256)),
                ('timestamp', models.DateTimeField()),
            ],
            options={
                'db_table': 'test_rgt_event',
                'ordering': ['event_uid'],
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TestRgtTest',
            fields=[
                ('test_id', models.AutoField(primary_key=True, serialize=False)),
                ('harness_uid', models.CharField(max_length=36, unique=True)),
                ('harness_start', models.DateTimeField()),
                ('harness_tld', models.CharField(max_length=1024)),
                ('application', models.CharField(max_length=1024)),
                ('testname', models.CharField(max_length=1024)),
                ('job_id', models.CharField(blank=True, max_length=64, null=True)),
                ('lsf_exit_status', models.SmallIntegerField(blank=True, null=True)),
                ('build_status', models.SmallIntegerField(blank=True, null=True)),
                ('submit_status', models.SmallIntegerField(blank=True, null=True)),
                ('output_build', models.TextField(blank=True, null=True)),
                ('output_submit', models.TextField(blank=True, null=True)),
                ('output_check', models.TextField(blank=True, null=True)),
                ('output_report', models.TextField(blank=True, null=True)),
                ('system', models.CharField(max_length=64)),
                ('previous_job_id', models.CharField(max_length=36)),
                ('done', models.IntegerField()),
                ('timestamp', models.DateTimeField()),
            ],
            options={
                'db_table': 'test_rgt_test',
                'ordering': ['application', 'testname', 'harness_uid'],
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TestRgtTestEvent',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('event_time', models.DateTimeField()),
                ('timestamp', models.DateTimeField()),
            ],
            options={
                'db_table': 'test_rgt_test_event',
                'ordering': ['test_id', 'event_id'],
                'managed': False,
            },
        ),
    ]
